{
  "version": 3,
  "sources": ["../../@tauri-apps/api/tauri.js"],
  "sourcesContent": ["// Copyright 2019-2023 Tauri Programme within The Commons Conservancy\r\n// SPDX-License-Identifier: Apache-2.0\r\n// SPDX-License-Identifier: MIT\r\n/** @ignore */\r\nfunction uid() {\r\n    return window.crypto.getRandomValues(new Uint32Array(1))[0];\r\n}\r\n/**\r\n * Transforms a callback function to a string identifier that can be passed to the backend.\r\n * The backend uses the identifier to `eval()` the callback.\r\n *\r\n * @return A unique identifier associated with the callback function.\r\n *\r\n * @since 1.0.0\r\n */\r\nfunction transformCallback(callback, once = false) {\r\n    const identifier = uid();\r\n    const prop = `_${identifier}`;\r\n    Object.defineProperty(window, prop, {\r\n        value: (result) => {\r\n            if (once) {\r\n                Reflect.deleteProperty(window, prop);\r\n            }\r\n            return callback?.(result);\r\n        },\r\n        writable: false,\r\n        configurable: true\r\n    });\r\n    return identifier;\r\n}\r\n/**\r\n * Sends a message to the backend.\r\n * @example\r\n * ```typescript\r\n * import { invoke } from '@tauri-apps/api/tauri';\r\n * await invoke('login', { user: 'tauri', password: 'poiwe3h4r5ip3yrhtew9ty' });\r\n * ```\r\n *\r\n * @param cmd The command name.\r\n * @param args The optional arguments to pass to the command.\r\n * @return A promise resolving or rejecting to the backend response.\r\n *\r\n * @since 1.0.0\r\n */\r\nasync function invoke(cmd, args = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        const callback = transformCallback((e) => {\r\n            resolve(e);\r\n            Reflect.deleteProperty(window, `_${error}`);\r\n        }, true);\r\n        const error = transformCallback((e) => {\r\n            reject(e);\r\n            Reflect.deleteProperty(window, `_${callback}`);\r\n        }, true);\r\n        window.__TAURI_IPC__({\r\n            cmd,\r\n            callback,\r\n            error,\r\n            ...args\r\n        });\r\n    });\r\n}\r\n/**\r\n * Convert a device file path to an URL that can be loaded by the webview.\r\n * Note that `asset:` and `https://asset.localhost` must be added to [`tauri.security.csp`](https://tauri.app/v1/api/config/#securityconfig.csp) in `tauri.conf.json`.\r\n * Example CSP value: `\"csp\": \"default-src 'self'; img-src 'self' asset: https://asset.localhost\"` to use the asset protocol on image sources.\r\n *\r\n * Additionally, `asset` must be added to [`tauri.allowlist.protocol`](https://tauri.app/v1/api/config/#allowlistconfig.protocol)\r\n * in `tauri.conf.json` and its access scope must be defined on the `assetScope` array on the same `protocol` object.\r\n *\r\n * @param  filePath The file path.\r\n * @param  protocol The protocol to use. Defaults to `asset`. You only need to set this when using a custom protocol.\r\n * @example\r\n * ```typescript\r\n * import { appDataDir, join } from '@tauri-apps/api/path';\r\n * import { convertFileSrc } from '@tauri-apps/api/tauri';\r\n * const appDataDirPath = await appDataDir();\r\n * const filePath = await join(appDataDirPath, 'assets/video.mp4');\r\n * const assetUrl = convertFileSrc(filePath);\r\n *\r\n * const video = document.getElementById('my-video');\r\n * const source = document.createElement('source');\r\n * source.type = 'video/mp4';\r\n * source.src = assetUrl;\r\n * video.appendChild(source);\r\n * video.load();\r\n * ```\r\n *\r\n * @return the URL that can be used as source on the webview.\r\n *\r\n * @since 1.0.0\r\n */\r\nfunction convertFileSrc(filePath, protocol = 'asset') {\r\n    return window.__TAURI__.convertFileSrc(filePath, protocol);\r\n}\r\n\r\nexport { convertFileSrc, invoke, transformCallback };\r\n"],
  "mappings": ";AAIA,SAAS,MAAM;AACX,SAAO,OAAO,OAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC;AAC9D;AASA,SAAS,kBAAkB,UAAU,OAAO,OAAO;AAC/C,QAAM,aAAa,IAAI;AACvB,QAAM,OAAO,IAAI,UAAU;AAC3B,SAAO,eAAe,QAAQ,MAAM;AAAA,IAChC,OAAO,CAAC,WAAW;AACf,UAAI,MAAM;AACN,gBAAQ,eAAe,QAAQ,IAAI;AAAA,MACvC;AACA,aAAO,qCAAW;AAAA,IACtB;AAAA,IACA,UAAU;AAAA,IACV,cAAc;AAAA,EAClB,CAAC;AACD,SAAO;AACX;AAeA,eAAe,OAAO,KAAK,OAAO,CAAC,GAAG;AAClC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,UAAM,WAAW,kBAAkB,CAAC,MAAM;AACtC,cAAQ,CAAC;AACT,cAAQ,eAAe,QAAQ,IAAI,KAAK,EAAE;AAAA,IAC9C,GAAG,IAAI;AACP,UAAM,QAAQ,kBAAkB,CAAC,MAAM;AACnC,aAAO,CAAC;AACR,cAAQ,eAAe,QAAQ,IAAI,QAAQ,EAAE;AAAA,IACjD,GAAG,IAAI;AACP,WAAO,cAAc;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACP,CAAC;AAAA,EACL,CAAC;AACL;AA+BA,SAAS,eAAe,UAAU,WAAW,SAAS;AAClD,SAAO,OAAO,UAAU,eAAe,UAAU,QAAQ;AAC7D;",
  "names": []
}
